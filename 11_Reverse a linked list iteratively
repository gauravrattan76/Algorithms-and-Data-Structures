Reverse a linked list iteratively-


class Main{
    Node head=  null;

    class Node{
        int data;
        Node next;

        Node(int data)
        {
            this.data = data;
            this.next = null;
        }
    }

    public void addFirst(int data)
    {
        Node nd = new Node(data);
        if(head == null)
        {
            head = nd;
            return;
        }

        nd.next = head;
        head = nd;

    }

    public void printList()
    {

        if(head == null)
        {
            return;
        }

        Node currnode = head;
        while(currnode != null)
        {
            System.out.print("---" + currnode.data);
            currnode = currnode.next;
        }
    }

    public void reverseList(){
        if( head == null || head.next == null)
        {
            return;
        }
        Node prevnode = head;
        Node currnode = head.next;
        while(currnode != null){
            Node nextnode = currnode.next;
            currnode.next = prevnode;

            prevnode = currnode;
            currnode = nextnode;
        }
        head.next = null;
        head = prevnode;
    }

    public  static void main(String[] args)
    {
        Main m = new Main();
        m.addFirst(5);
        m.addFirst(4);
        m.addFirst(3);
        m.addFirst(2);
        m.addFirst(1);
        m.printList();
        System.out.println("******");
        m.reverseList();
        m.printList();
    }
}




